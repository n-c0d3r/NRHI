#pragma once

/** @file nrhi/directx11/compute_pipeline_state.hpp
*
*   Implement directx11 compute pipeline_state.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/directx11/pipeline_state.hpp>

#pragma endregion



namespace nrhi {

	class A_device;



	class NRHI_API F_directx11_compute_pipeline_state : public F_directx11_pipeline_state {

	private:
		ID3D11ComputeShader* d3d11_compute_shader_p_ = 0;

		F_compute_pipeline_state_options options_;

	public:
		NCPP_FORCE_INLINE ID3D11ComputeShader* d3d11_compute_shader_p() const noexcept { return d3d11_compute_shader_p_; }
		NCPP_FORCE_INLINE void set_d3d11_compute_shader_p_unsafe(ID3D11ComputeShader* value) noexcept { d3d11_compute_shader_p_ = value; }

		NCPP_FORCE_INLINE const auto& options() const noexcept { return options_; }

#ifdef NRHI_ENABLE_DRIVER_DEBUGGER
        virtual void set_debug_name(const F_debug_name& value) override;
#endif



	public:
		F_directx11_compute_pipeline_state(
			TKPA_valid<A_device> device_p,
			const F_compute_pipeline_state_options& options
		);
		virtual ~F_directx11_compute_pipeline_state();

	};

}
