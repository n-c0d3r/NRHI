#pragma once

/** @file nrhi/directx11/shader_blob.hpp
*
*   Implement directx11 shader blob.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/shader_blob_base.hpp>

#pragma endregion



namespace nrhi {

	class NRHI_API F_directx11_shader_blob : public A_shader_blob {

	private:
		ID3DBlob* d3d_blob_p_ = 0;

	public:
		NCPP_FORCE_INLINE ID3DBlob* d3d_blob_p() noexcept { return d3d_blob_p_; }
		NCPP_FORCE_INLINE void set_d3d_blob_p_unsafe(ID3DBlob* value) noexcept { d3d_blob_p_ = value; }



	public:
		F_directx11_shader_blob(
			const F_shader_blob_desc& desc,
			ED_shader_type overrided_type,
			ID3DBlob* d3d_blob_p
		);
		virtual ~F_directx11_shader_blob();

	};



	class NRHI_API HD_directx11_shader_blob {

	};

}
