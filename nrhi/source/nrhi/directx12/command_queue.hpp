#pragma once

/** @file nrhi/directx12/command_queue.hpp
*
*   Implement directx12 command_queue.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/command_queue_base.hpp>

#pragma endregion



namespace nrhi {

	class A_device;
	class A_command_list;
	class A_fence;



	class NRHI_API F_directx12_command_queue : public A_command_queue {

	private:
		ID3D12CommandQueue* d3d12_command_queue_p_ = 0;

	public:
		NCPP_FORCE_INLINE ID3D12CommandQueue* d3d12_command_queue_p() noexcept { return d3d12_command_queue_p_; }
		NCPP_FORCE_INLINE void set_d3d12_command_queue_p_unsafe(ID3D12CommandQueue* value) noexcept { d3d12_command_queue_p_ = value; }



	public:
		F_directx12_command_queue(TKPA_valid<A_device> device_p, const F_command_queue_desc& desc);
		~F_directx12_command_queue();

	};



	class NRHI_API HD_directx12_command_queue {

	public:
		static TU<A_command_queue> create(TKPA_valid<A_device> device_p, const F_command_queue_desc& desc);

	public:
		static void async_signal(
			TKPA_valid<A_command_queue> command_queue_p,
			TKPA_valid<A_fence> fence_p,
			u64 new_value
		);
		static void async_wait(
			TKPA_valid<A_command_queue> command_queue_p,
			TKPA_valid<A_fence> fence_p,
			u64 value
		);

	public:
		static void async_execute_command_lists(
			TKPA_valid<A_command_queue> command_queue_p,
			TG_span<TK_valid<A_command_list>> command_list_p_span
		);
		static void async_execute_command_list(
			TKPA_valid<A_command_queue> command_queue_p,
			TKPA_valid<A_command_list> command_list_p
		);



#pragma region Alternative Functions
#ifdef NRHI_DRIVER_ENABLE_INTERFACE_ONLY_SUPPORTS
	public:
		static void execute_command_lists(
			TKPA_valid<A_command_queue> command_queue_p,
			TG_span<TK_valid<A_command_list>> command_list_p_span
		);
		static void execute_command_list(
			TKPA_valid<A_command_queue> command_queue_p,
			TKPA_valid<A_command_list> command_list_p
		);
#endif // NRHI_DRIVER_ENABLE_INTERFACE_ONLY_SUPPORTS
#pragma endregion

	};

}
