#pragma once

/** @file nrhi/directx12/sampler_state.hpp
*
*   Implement directx12 sampler state.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/sampler_state_base.hpp>

#pragma endregion



namespace nrhi {

	class A_device;



	class NRHI_API F_directx12_sampler_state : public A_sampler_state {

	public:
		F_directx12_sampler_state(
			TKPA_valid<A_device> device_p,
			const F_sampler_state_desc& desc
		);
		F_directx12_sampler_state(
			TKPA_valid<A_device> device_p,
			const F_sampler_state_desc& desc,
			const F_descriptor& descriptor
		);
		virtual ~F_directx12_sampler_state();

	public:
		NCPP_OBJECT(F_directx12_sampler_state);

	public:
		virtual void rebuild(
			const F_sampler_state_desc& desc
		) override;
#ifdef NRHI_DRIVER_SUPPORT_ADVANCED_RESOURCE_BINDING
		virtual void rebuild(
			const F_sampler_state_desc& desc,
			const F_descriptor& descriptor
		) override;
#endif // NRHI_DRIVER_SUPPORT_ADVANCED_RESOURCE_BINDING

	};



	class NRHI_API HD_directx12_sampler_state {

	public:

	};

}
