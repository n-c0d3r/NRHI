#pragma once

/** @file nrhi/shader_library_base.hpp
*
*   Implement shader_library base class.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nrhi/shader_type.hpp>
#include <nrhi/shader_desc.hpp>

#pragma endregion



namespace nrhi {

	class A_device;
	class A_shader;



	struct F_shader_library_desc {

		TG_vector<TK_valid<A_shader_blob>> shader_blob_p_vector;

	};



	class NRHI_API A_shader_library {

	private:
		TK_valid<A_device> device_p_;
		F_shader_library_desc desc_;

	public:
		NCPP_FORCE_INLINE TK_valid<A_device> device_p() noexcept { return device_p_; }
		NCPP_FORCE_INLINE F_shader_library_desc desc() noexcept { return desc_; }



	protected:
		A_shader_library(
			TK_valid<A_device> device_p,
			const F_shader_library_desc& desc
		);

	public:
		virtual ~A_shader_library();

	};

}
